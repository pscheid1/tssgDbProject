# Leverage the NavarroComputing functions
. ../../cmd.env

# Ensure logs directory exists
logsDirValidate() { 
    if [ ! -d logs ] ; then
        mkdir logs
        echo "Created logs directory." 
    fi
    return $?
}

# Image versions
export backendVersion=1.3
export frontendVersion=1.3
export mongoVersion=0.3
export websiteVersion=0.2

imagesDanglingRemove() {
    msg INFO "Remove any dangling images ..."
    danglingImageList="$(docker images -aq -f 'dangling=true')"
    if [ -n "$danglingImageList" ] ; then
        docker rmi $(docker images -aq -f 'dangling=true')
    else
        msg INFO "    No dangling images to remove ..."
    fi
}

msg INFO "Determine if we are running on Docker Toolbox or Linux ..."
if [ ! -z "$DOCKER_MACHINE_NAME" ] ; then
    msg INFO "... We are running in Docker Toolbox ..."
    export TSSGAPIURL="http://backend.sdb"
    export TSSGAPIPORT="80"
    export TSSGAPPURL="http://frontend.sdb"
elif [ "$(hostname)" == "Ubuntu-Studio-14" ] ; then
    msg INFO "... We are running in a Linux server ..."
    export TSSGAPIURL="https://backend.sdb.technologynursery.org"
    export TSSGAPIPORT="443"
    export TSSGAPPURL="https://frontend.sdb.technologynursery.org"
else
    msg INFO "... We are running in a local Linux ..."
    export TSSGAPIURL="http://backend.sdb"
    export TSSGAPIPORT="80"
    export TSSGAPPURL="http://frontend.sdb"
fi

# get backend url and port
export BACKEND_BASE_URL=${TSSGAPIURL:-"http://backend"}
export BACKEND_BASE_PORT=${TSSGAPIPORT:-"7010"}

# get website url and port
export WEBSITE_URL=${WEBSITE_URL:-"http://website"}
export WEBSITE_PORT=${WEBSITE_PORT:-"8088"}

# get frontend url and port
export FRONTEND_URL=${FRONTEND_URL:-"http://frontend"}
export FRONTEND_PORT=${FRONTEND_PORT:-"4200"}

# get miscellaneous environment variables
export tssgApiMtgDebug=${tssgApiMtgDebug:-"false"}
export tssgApiDefaultTeam=${tssgApiDefaultTeam:-"WedGenMtg"}
export tssgJwtExp=${tssgJwtExp:-"30"}
export tssgServerKey=${tssgServerKey:-"tssg-server-key.pem"}
export tssgServerCrt=${tssgServerCrt:-"tssg-server-crt.pem"}
export tssgCaCrt=${tssgCaCrt:-"tssg-ca-crt.pem"}
export tssgCaCrl=${tssgCaCrl:-"tssg-ca-crl.pem"}
