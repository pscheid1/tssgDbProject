#!/usr/bin/env bash
#help mongo.install                              # Hard install the mongo services

. scheduledb.env
logsDirValidate
# Redirect STDERR to STDOUT

msg BEGIN "Clean up and Install the mongo db services ..."

msg INFO "Remove mongo and mongo-express containers and volumes ..."
msg INFO "$(  exec 2>&1
docker-compose rm -f -s -v mongo
docker-compose rm -f -s -v mongo-express
)"

imagesDanglingRemove

msg INFO "Build the mongo db and mongo-express images and start containers ..."
msg INFO "$( exec 2>&1
docker-compose up -d --build mongo
# Start Mongo Express except on s14
[ $(hostname) != "Ubuntu-Studio-14" ] && docker-compose up -d --build mongo-express
)"

msg INFO "Initialize the tssg-tech mongo database when the service is ready ..."
docker exec scheduledb_mongo_1 bash -c "\
    while (! mongo -u root -p sch3dul3db --eval 'db.stats()' | grep -q '\"ok\" : 1') 
    do
        echo 'checking mongo health again in 5s ...'
        sleep 5s
    done"

msg INFO "$(docker exec scheduledb_mongo_1 bash -c "\
    cd /root; \
    mongorestore \
        -u root \
        -p sch3dul3db \
        --authenticationDatabase admin \
        --authenticationMechanism SCRAM-SHA-1 \
        --db tssg-tech \
        tssg-tech 2>&1 | grep 'done'")"
msg INFO "... done."


msg INFO "Mongo can be accessed on port 27017"
if docker ps | grep -q mongo-express ; then
    msg INFO "Mongo Express can be accessed at mongo-express.sdb"
else
    msg INFO "Mongo Express was not started."
fi

msg END "... done."
